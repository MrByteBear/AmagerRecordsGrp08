---
import Layout from "../layouts/Layout.astro";
import ProductCard from "../components/ProductCard.astro";
import ProductBanner from "../components/ProductBanner.astro";

const url = "https://gxmdglbibfpiwogwemde.supabase.co/rest/v1/Shop";
const key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd4bWRnbGJpYmZwaXdvZ3dlbWRlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxMzEyMzIsImV4cCI6MjA2MjcwNzIzMn0.BvX0BmkEeCJXM87A6rCzVi7tqiTnfB--7qAfPqe6UT0";

const options = {
  headers: {
    apikey: key,
  },
};
const request = await fetch(url, options);
const data = await request.json();

const section1ID = [1, 2, 3, 4, 5, 6, 7, 8];

const section1Albums = data.filter((album) => section1ID.includes(album.id));

const section2ID = [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];

const section2Albums = data.filter((album) => section2ID.includes(album.id));

const section3ID = [21, 22, 23, 24, 25, 26, 27, 28];

const section3Albums = data.filter((album) => section3ID.includes(album.id));

const banner1ID = [10];
const banner1Album = data.filter((album) => banner1ID.includes(album.id));
const banner2ID = [64];
const banner2Album = data.filter((album) => banner2ID.includes(album.id));
---

<Layout title="Tester Title">
  <div class="filterContainer">
    <select name="Kategori" id="Kategori" class="filterBar">
      <option value="">Kategori</option>
      <option value="LP">LP</option>
      <option value="CD">CD</option>
      <option value="Album">Album</option>
      <option value="Single">Single</option>
      <option value="2xLP">2xLP</option>
    </select>
    <select name="Genre" id="Genre" class="filterBar">
      <option value="">Genre</option>
      <option value="Rock">Rock</option>
      <option value="Pop">Pop</option>
      <option value="Jazz">Jazz</option>
      <option value="Hip-Hop">Hip-Hop</option>
      <option value="Electronic">Electronic</option>
      <option value="Classical">Classical</option>
    </select>
    <form class="searchContainerFilter" id="searchContainerFilter" method="GET">
      <input type="text" id="searchInputFilter" placeholder="Eksempel: 'LP'" aria-label="Search" />
      <button type="submit" id="searchBtnFilter">Søg</button>
    </form>
  </div>
  <section id="section1">
    {
      section1Albums.map((album) => {
        return <ProductCard data={album} />;
      })
    }
  </section>
  <div id="banner1">
    {
      banner1Album.map((album) => {
        return <ProductBanner data={album} description="Lizzos Cuz I Love You er en kraftfuld og energisk blanding af pop, hiphop, soul og funk, der fremhæver hendes stærke vokal og selvsikre udstråling. Albummet, der udkom i 2019, er en fejring af selvkærlighed, empowerment og sårbarhed, fyldt med smittende hooks og rå følelser. Sange som Juice og Truth Hurts emmer af karisma og humor, mens andre numre viser en mere følsom og modstandsdygtig side. Det er en dynamisk og genrebrydende debut, der cementerer Lizzo som både popikon og stemme for kropspositivitet og ægthed." />;
      })
    }
  </div>
  <section id="section2">
    {
      section2Albums.map((album) => {
        return <ProductCard data={album} />;
      })
    }
  </section>
  <div id="banner2">
    {
      banner2Album.map((album) => {
        return <ProductBanner data={album} reverse="reverse" description="Hozier's selvbetitlede debutalbum er en sjælfuld blanding af blues, rock og gospel, båret af hans dragende vokal og poetiske tekster. Udgivet i 2014 udforsker albummet temaer som kærlighed, tro, synd og forløsning, med gennembrudshittet Take Me to Church som et centralt omdrejningspunkt. Med sin rige instrumentering og følelsesladede sangskrivning introducerer Hozier en mørk romantik og spirituel dybde, der markerer den irske sanger som en stærk stemme i alternativ musik." />;
      })
    }
  </div>
  <section id="section3">
    {
      section3Albums.map((album) => {
        return <ProductCard data={album} />;
      })
    }
  </section>
</Layout>

<style>
  /*********    Container Stylings    ***********/
  section {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 30px;
    margin-top: 1rem;
    margin-left: 1rem;
    margin-right: 1rem;
    justify-items: center;
  }

  /*********    Filter Stylings    ***********/
  .filterContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .filterBar {
    width: 100%;
    height: 40px;
    padding: 0.5rem;
    background-color: var(--color-primary);
    border: 2px solid var(--color-text-primary);
    font-family: var(--font-family-serif);
    font-size: var(--fs-sm);
    color: var(--color-text-primary);
  }

  .searchContainerFilter {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .searchContainerFilter input {
    width: 150px;
    height: 40px;
    padding: 0.5rem;
    background-color: var(--color-primary);
    border: 2px solid var(--color-text-primary);
  }
  .searchContainerFilter button {
    cursor: pointer;
    width: 50px;
    height: 40px;
    background-color: var(--color-text-primary);
    color: var(--color-primary);
    font-family: var(--font-family-serif);
    font-size: var(--fs-sm);
    text-transform: uppercase;
    font-weight: bold;
  }

  @media screen and (min-width: 800px) {
    section {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      max-width: 1920px;
    }
    .filterContainer {
      flex-direction: row;
      gap: 1rem;
    }
    .filterBar {
      width: 150px;
    }
  }

  :global(main) {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem 0rem;
  }
</style>
