---
import "../../styles/globalStyle.css";

import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const url = "https://gxmdglbibfpiwogwemde.supabase.co/rest/v1/Shop";
  const key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd4bWRnbGJpYmZwaXdvZ3dlbWRlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxMzEyMzIsImV4cCI6MjA2MjcwNzIzMn0.BvX0BmkEeCJXM87A6rCzVi7tqiTnfB--7qAfPqe6UT0";

  const options = {
    headers: {
      apikey: key,
    },
  };

  const request = await fetch(url, options);
  const data = await request.json();

  return data.map((item) => {
    return {
      params: { product: item.slug },
      props: { item },
    };
  });
}
const { item } = Astro.props;

---
<Layout title={`${item.Albumtitel}`}>
  <h1>{item.Albumtitel} - {item.Kunstner}</h1>
  <div class="gridstorskaerm">
    <div class="overskriftogbillede">
  <img src={item.Image} alt=`Image of ${item.Albumtitel}` />
</div>

 <div>
    <div class="tekstboks">
      <div class="info-rækker">
        <div class="venstre-kolonne">
          <p>LP, Album</p>
          <p>{item.Kunstner}</p>
        </div>
        <div class="højre-kolonne">
          <p>Media: {item.Pladecondition}</p>
          <p>Sleeve: {item.Sleevecondition}</p>
        </div>
      </div>
  
      <div class="prisogvogn">
        <p class="pris">{item.Pris} kr</p>
        <a href="">Læg i vogn</a>
      </div>
    </div>
  </div>
  </div>
  
</Layout>

<style>
.gridstorskaerm{
  margin-top: 1rem;
  margin-bottom: 7rem;
}

.tekstboks {
  background-color: #CFDBF1;
  padding: 4rem 3rem;
  margin: 4rem auto;     
  max-width: 450px; 
}

.prisogvogn{
  justify-items: center;
  margin-top: 2rem;
}

a{
  background-color: black;
  color: white;
  margin-top: 3rem;
  padding-left: 3.5rem;
  padding-right: 3.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: var(--fs-lg);
  cursor: pointer;
  display: inline-block;
  transition: transform 0.2s ease;
}
a:hover {
  transform: scale(1.05);
}
.pris{
  margin-bottom: 1rem;
}

.info-rækker {
  display: grid;
  grid-template-columns: 1fr;
}
img{
  justify-self: center;
  /* width: 500px; */
width: 100%;
height: auto;
  margin-top: 1rem;
 padding-left: 2rem;
 padding-right: 2rem;
}


h1{
  justify-self: center;
  /* max-width: 500px; */
  margin-left: 2rem;
  margin-right: 2rem;
margin-top: 7rem;
font-size: var(--fs-2xl);
}
p{
  font-size: var(--fs-lg);
margin-bottom: 1.5rem;
}

@media (min-width: 800px) {
a{
  margin-left: -2rem;
  margin-right: -2rem;
}
  .gridstorskaerm{
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-left: 3rem;
  }
  
  img{
  justify-self: center;
  /* width: 500px; */
width: 100%;
height: auto;
margin-top: 1rem;
 padding-left: 1.6rem;
 padding-right: 2rem;

}
  h1{
    justify-self: left;
    max-width: 1000px;
    padding-left: 2.6rem;
  }
  .tekstboks {
  background-color: #CFDBF1;
  padding: 4rem 3rem;
  margin-bottom: 4rem; 
  margin-right: 4.5rem;
  max-width: 600px; 
}
.info-rækker {
  display: grid;
  grid-template-columns: 1fr;
}

}
@media (min-width: 1400px) and (max-width: 1500px) {
  .tekstboks {
 align-self: center;
 margin-top: 15.5rem;

}
}
@media (min-width: 1300px) and (max-width: 1400px) {
  .tekstboks {
 align-self: center;
 margin-top: 13rem;

}
}
@media (min-width: 1200px) and (max-width: 1300px) {
  .tekstboks {
 align-self: center;
 margin-top: 12rem;

}
}
@media (min-width: 1100px) and (max-width: 1200px) {
  .tekstboks {
 align-self: center;
 margin-top: 10rem;

}
}
@media (min-width: 1000px) and (max-width: 1100px) {
  .tekstboks {
 align-self: center;
 margin-top: 7rem;

}
}
@media (min-width: 900px) and (max-width: 1000px) {
  .tekstboks {
 align-self: center;
 margin-top: 6rem;

}
}
@media (min-width: 850px) and (max-width: 900px) {
  .tekstboks {
 align-self: center;
 margin-top: 5rem;

}
}
@media (min-width: 800px) and (max-width: 850px) {
  .tekstboks {
 align-self: center;
 margin-top: 4rem;

}
}


</style>



